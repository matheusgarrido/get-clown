{"version":3,"sources":["components/common/header.tsx","components/joke/joke.tsx","api/generic-api.ts","api/axios-instance.ts","components/dialog/dialogTheme.ts","components/dialog/dialogContent.tsx","components/categories/useCategories.ts","components/flags/useFlags.ts","components/dialog/dialog.tsx","components/joke/card.tsx","components/common/footer.tsx","App.tsx","index.tsx"],"names":["Header","title","AppBar","position","id","Toolbar","Typography","variant","JokeComponent","props","joke","className","gutterBottom","category","toUpperCase","GetJoke","useState","showJoke","setShowJoke","type","setup","delivery","onClick","event","axios","axiosInstance","Axios","create","baseURL","interceptors","response","use","error","status","console","info","getAxiosInstance","genericController","getFlags","a","get","then","res","data","flags","getCategories","categories","getJoke","log","blacklistFlags","join","mainColor","checkBoxTheme","createMuiTheme","palette","secondary","main","radioButtonTheme","DialogValues","getDialogValues","setCategories","useMemo","c","useCategories","setFlags","f","useFlags","radioValue","setRadioValue","checkValues","setCheckValues","useEffect","Grid","container","justify","CircularProgress","handleChangeCheck","target","checked","name","index","indexOf","check","i","length","splice","FormControl","component","direction","RadioGroup","aria-label","value","onChange","FormLabel","focused","ThemeProvider","theme","Object","entries","map","FormControlLabel","control","Radio","label","FormGroup","Checkbox","includes","DialogComponent","open","setOpen","dialogCancel","valuesFilter","radio","Dialog","aria-labelledby","fullWidth","onBackdropClick","DialogTitle","Button","size","CardComponent","setJoke","setCategory","newJoke","j","Card","CardContent","CardActions","undefined","Footer","currentYear","Date","getFullYear","developmentYear","yearShown","App","alignItems","ReactDOM","render","StrictMode","document","getElementsByTagName"],"mappings":"yNAWaA,EAAS,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MACvB,OACE,iCACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,GAAI,SAA9B,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BN,W,8ECRvBO,G,MAAgB,SAACC,GAAsB,IAC1CC,EAASD,EAATC,KACR,OACE,qCACE,qBAAKC,UAAU,cAAf,SACE,cAACL,EAAA,EAAD,CAAYM,cAAY,EAAxB,SAA0BF,EAAKG,SAASC,kBAE1C,qBAAKH,UAAU,gBAAf,SACE,cAAC,EAAD,CAASD,KAAMA,WAMjBK,EAAU,SAACN,GAAsB,IAAD,EACJO,oBAAS,GADL,mBAC7BC,EAD6B,KACnBC,EADmB,KAE5BR,EAASD,EAATC,KACR,OAAQA,EAAKS,MACX,IAAK,UACH,OAAKF,EAeH,qCACE,cAACX,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BG,EAAKU,QAC/B,cAACd,EAAA,EAAD,UAAaI,EAAKW,cAflB,qCACE,cAACf,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BG,EAAKU,QAC/B,sBACEhB,GAAI,kBACJkB,QAAS,SAACC,GAAD,OACPL,GAAY,IAHhB,oBAiBR,QACE,OACE,mCACE,cAACZ,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BG,EAAKA,W,4HC9CnCc,ECD0B,WAC9B,IAAIC,EAAgBC,IAAMC,OAAO,CAAEC,QAHrB,4BAWd,OAPAH,EAAcI,aAAaC,SAASC,KAClC,SAACD,GAAD,OAAcA,KACd,SAACE,GAAW,IACFC,EAAWD,EAAMF,SAAjBG,OACJA,EAAS,KAAKC,QAAQC,KAAR,4BAAkCF,EAAlC,SAGfR,EDRKW,GAQDC,EAAoB,WAwB/B,MAAO,CAAEC,SAvBK,uCAAG,8BAAAC,EAAA,sEACQf,EAAMgB,IAAN,UAAoBC,MAAK,SAACC,GAAD,OAASA,EAAIC,QAD9C,cACTb,EADS,OAETc,EAAed,EAASc,MAFf,kBAGRA,GAHQ,2CAAH,qDAuBKC,cAlBA,uCAAG,8BAAAN,EAAA,sEACGf,EAAMgB,IAAN,eAAyBC,MAAK,SAACC,GAAD,OAASA,EAAIC,QAD9C,cACdb,EADc,OAEdgB,EAAyBhB,EAASgB,WAFpB,kBAGbA,GAHa,2CAAH,qDAkBeC,QAbrB,uCAAG,WACdlC,EACA+B,GAFc,mBAAAL,EAAA,6DAIdL,QAAQc,IAAIJ,GACNK,EAAiBL,EAAK,0BAAsBA,EAAMM,KAAK,MAAS,GACtEhB,QAAQc,IAAIC,GANE,SAOSzB,EACpBgB,IADoB,gBACP3B,GADO,OACIoC,IACxBR,MAAK,SAACC,GAAD,OAASA,EAAIC,QATP,cAORb,EAPQ,OAURpB,EAAaoB,EAVL,kBAWPpB,GAXO,2CAAH,0D,QEtBTyC,EAAY,UAELC,EAAgBC,YAAe,CAC1CC,QAAS,CACPC,UAAW,CACTC,KAAML,MAKCM,EAAmBJ,YAAe,CAC7CC,QAAS,CACPC,UAAW,CACTC,KAAML,MCOCO,G,MAAe,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,gBACvB9C,ECnBqB,WAA+B,IAAD,EACrBG,qBADqB,mBAClD8B,EADkD,KACtCc,EADsC,KAOzD,OAJcC,kBAAO,sBAAC,4BAAAtB,EAAA,sEACJF,IAAoBQ,gBADhB,OACdiB,EADc,OAEpBF,EAAcE,GAFM,2CAGnB,IACIhB,EDYUiB,GACXnB,EEpBgB,WAA0B,IAAD,EACrB5B,qBADqB,mBACxC4B,EADwC,KACjCoB,EADiC,KAQ/C,OALiBH,kBAAO,sBAAC,4BAAAtB,EAAA,sEACPF,IAAoBC,WADb,OACjB2B,EADiB,OAEvBD,EAASC,GAFc,2CAGtB,IAEIrB,EFYOsB,GAFwD,EAGlClD,mBAAS,OAHyB,mBAG/DmD,EAH+D,KAGnDC,EAHmD,OAIhCpD,mBAAmB,IAJa,mBAI/DqD,EAJ+D,KAIlDC,EAJkD,KAUtE,GAJAC,qBAAU,WACRZ,EAAgBQ,EAAYE,KAC3B,CAACA,EAAaF,KAEZtD,IAAa+B,EAChB,OACE,cAAC4B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,SAAzB,SACE,cAACC,EAAA,EAAD,MAIN,IAIMC,EAAoB,SAACrD,GAA0C,IAAD,EACxCA,EAAMsD,OAAxBC,EAD0D,EAC1DA,QAASC,EADiD,EACjDA,KACjB,GAAID,EACFR,EAAe,GAAD,mBAAKD,GAAL,CAAkBU,SAC3B,CAGL,IAFA,IAAMC,EAAQX,EAAYY,QAAQF,GAC9BG,EAAQb,EACHc,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAC5BA,IAAMH,GACRE,EAAMG,OAAOF,EAAG,GAGpBb,EAAe,YAAIY,MAIvB,OACE,cAACI,EAAA,EAAD,CAAaC,UAAU,WAAvB,SACE,eAACf,EAAA,EAAD,CAAMC,WAAS,EAACe,UAAU,MAAMd,QAAQ,eAAxC,UACE,eAACe,EAAA,EAAD,CACEC,aAAW,WACXX,KAAK,WACLY,MAAOxB,EACPyB,SA3BkB,SAACrE,GACzB6C,EAAc7C,EAAMsD,OAAOc,QAsBvB,UAME,cAACE,EAAA,EAAD,CAAWN,UAAU,SAASO,SAAS,EAAvC,sBAGA,cAACC,EAAA,EAAD,CAAeC,MAAOvC,EAAtB,SACGwC,OAAOC,QAAQrF,GAAUsF,KAAI,SAACzD,GAC7B,OACE,cAAC0D,EAAA,EAAD,CAEET,MAAOjD,EAAI,GACX2D,QAAS,cAACC,EAAA,EAAD,IACTC,MAAO7D,EAAI,GACXoC,QAASpC,EAAI,KAAOyB,GAJfzB,EAAI,YAWnB,eAAC8D,EAAA,EAAD,WACE,cAACX,EAAA,EAAD,CAAWN,UAAU,QAAQO,SAAS,EAAtC,mBAGA,cAACC,EAAA,EAAD,CAAeC,MAAO5C,EAAtB,SACG6C,OAAOC,QAAQtD,GAAOuD,KAAI,SAACzD,GAAD,OACzB,cAAC0D,EAAA,EAAD,CAEEC,QACE,cAACI,EAAA,EAAD,CACE3B,QAAST,EAAYqC,SAAShE,EAAI,IAClCkD,SAAUhB,EACVG,KAAMrC,EAAI,KAGd6D,MAAO7D,EAAI,IARNA,EAAI,mBG5EZiE,EAAkB,SAAC,GAIH,IAH3BC,EAG0B,EAH1BA,KACAC,EAE0B,EAF1BA,QACAlD,EAC0B,EAD1BA,gBAEMmD,EAAe,WACnBD,GAAQ,IAENE,EAAe,CAAEC,MAAO,MAAO9B,MAAO,CAAC,KAK3C,OACE,eAAC+B,EAAA,EAAD,CACEC,kBAAgB,sBAChBN,KAAMA,EACNO,WAAW,EACXC,gBAAiB,kBAAMN,KAJzB,UAME,cAACO,EAAA,EAAD,CAAajH,GAAG,sBAAhB,oBACA,cAAC,EAAD,CAAcuD,gBAZA,SAACqD,EAAe9B,GAChC6B,EAAaC,MAAQA,EACrBD,EAAa7B,MAAQA,KAWnB,eAACV,EAAA,EAAD,CAAMC,WAAS,EAACe,UAAU,MAAMd,QAAQ,eAAxC,UACE,cAAC4C,EAAA,EAAD,CACEC,KAAK,QACLhH,QAAS,YACTH,GAAI,kBACJkB,QAAS,WACPwF,KALJ,oBAUA,cAACQ,EAAA,EAAD,CACEC,KAAK,QACLhH,QAAS,YACTH,GAAI,kBACJkB,QAAS,WAEPqC,EAAgBoD,GAChBD,KAPJ,2BC/BKU,EAAgB,WAAO,IAAD,EACTxG,oBAAS,GADA,mBAC1B4F,EAD0B,KACpBC,EADoB,OAET7F,qBAFS,mBAE1BN,EAF0B,KAEpB+G,EAFoB,OAGDzG,mBAAiB,OAHhB,mBAG1BH,EAH0B,KAGhB6G,EAHgB,OAIP1G,mBAA0B,MAJnB,mBAI1B4B,EAJ0B,KAInBoB,EAJmB,KAM3BjB,EAAU,YACP,uCAAG,4BAAAR,EAAA,sEACcF,IAAoBU,QAAQlC,EAAU+B,GADpD,OACF+E,EADE,OAERF,EAAQE,GAFA,2CAAH,qDAIPC,IAOF,GALArD,qBAAU,YACD,uCAAG,sBAAAhC,EAAA,+EAAYQ,KAAZ,2CAAH,qDACP6E,KACC,KAEElH,EAAM,OAAO,cAACiE,EAAA,EAAD,IAMlB,OACE,qCACE,eAACkD,EAAA,EAAD,CAAMzH,GAAI,OAAV,UACE,cAAC0H,EAAA,EAAD,UACE,cAAC,EAAD,CAAepH,KAAMA,MAEvB,cAACqH,EAAA,EAAD,UACE,cAACT,EAAA,EAAD,CACEC,KAAK,QACLhH,QAAS,YACTH,GAAI,aACJkB,QAAS,SAACC,GACRkG,OAAQO,GACRjF,KANJ,+BAaJ,cAACuE,EAAA,EAAD,CACEC,KAAK,QACLhH,QAAS,YACTH,GAAI,YACJkB,QAAS,WACPuF,GAAQ,IALZ,oBAUA,cAAC,EAAD,CACED,KAAMA,EACNC,QAASA,EACTlD,gBAtCkB,SAAC,GAAyC,IAAvCqD,EAAsC,EAAtCA,MAAO9B,EAA+B,EAA/BA,MAChCwC,EAAYV,GACZhD,EAASkB,GACTnC,WCvCSkF,EAAS,WACpB,IAAMC,GAAc,IAAIC,MAAOC,cACzBC,EAAkB,KAClBC,EACJJ,IAAgBG,EACZA,EADJ,UAEOA,EAFP,cAE4BH,GAC9B,OACE,iCACE,eAAC5H,EAAA,EAAD,CAAYC,QAAS,WAArB,+CACuC+H,Q,cCuB9BC,MA5Bf,WAEE,OACE,mCACE,eAAC/D,EAAA,EAAD,CACEC,WAAS,EACTe,UAAU,SACVd,QAAQ,gBACR8D,WAAW,SACXpI,GAAG,WALL,UAOE,cAAC,EAAD,CAAQH,MAVA,aAWR,+BACE,cAACuE,EAAA,EAAD,CACEC,WAAS,EACTe,UAAU,SACVd,QAAQ,gBACR8D,WAAW,SAJb,SAME,cAAC,EAAD,QAGJ,cAAC,EAAD,UCxBRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,qBAAqB,QAAQ,K","file":"static/js/main.771e99cf.chunk.js","sourcesContent":["import {\r\n  AppBar,\r\n  Button,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\ninterface headerProps {\r\n  title: string;\r\n}\r\nexport const Header = ({ title }: headerProps) => {\r\n  return (\r\n    <header>\r\n      <AppBar position=\"static\" id={'header'}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\">{title}</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </header>\r\n  );\r\n};\r\n","import { Typography } from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport { Joke } from '../../api/schemas/joke';\r\n\r\ninterface jokeProps {\r\n  joke: Joke;\r\n}\r\n\r\nexport const JokeComponent = (props: jokeProps) => {\r\n  const { joke } = props;\r\n  return (\r\n    <>\r\n      <div className=\"card--title\">\r\n        <Typography gutterBottom>{joke.category.toUpperCase()}</Typography>\r\n      </div>\r\n      <div className=\"card--content\">\r\n        <GetJoke joke={joke} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst GetJoke = (props: jokeProps) => {\r\n  const [showJoke, setShowJoke] = useState(false);\r\n  const { joke } = props;\r\n  switch (joke.type) {\r\n    case 'twopart':\r\n      if (!showJoke)\r\n        return (\r\n          <>\r\n            <Typography variant=\"h5\">{joke.setup}</Typography>\r\n            <span\r\n              id={'hidden-delivery'}\r\n              onClick={(event: React.MouseEvent<HTMLElement>) =>\r\n                setShowJoke(true)\r\n              }\r\n            >\r\n              ???\r\n            </span>\r\n          </>\r\n        );\r\n      return (\r\n        <>\r\n          <Typography variant=\"h5\">{joke.setup}</Typography>\r\n          <Typography>{joke.delivery}</Typography>\r\n        </>\r\n      );\r\n\r\n    default:\r\n      return (\r\n        <>\r\n          <Typography variant=\"h5\">{joke.joke}</Typography>\r\n        </>\r\n      );\r\n  }\r\n};\r\n","import { Flags } from './schemas/flags';\r\nimport { getAxiosInstance } from './axios-instance';\r\nimport { Categories } from './schemas/categories';\r\nimport { Joke } from './schemas/joke';\r\n\r\nconst axios = getAxiosInstance();\r\n\r\ninterface ResourceReturn {\r\n  getFlags: () => Promise<Flags>;\r\n  getCategories: () => Promise<Categories>;\r\n  getJoke: (category: string, flags: string[] | null) => Promise<Joke>;\r\n}\r\n\r\nexport const genericController = (): ResourceReturn => {\r\n  const getFlags = async (): Promise<Flags> => {\r\n    const response = await axios.get(`/flags`).then((res) => res.data);\r\n    const flags: Flags = response.flags;\r\n    return flags;\r\n  };\r\n  const getCategories = async (): Promise<Categories> => {\r\n    const response = await axios.get(`/categories`).then((res) => res.data);\r\n    const categories: Categories = response.categories;\r\n    return categories;\r\n  };\r\n  const getJoke = async (\r\n    category: string,\r\n    flags: string[] | null\r\n  ): Promise<Joke> => {\r\n    console.log(flags);\r\n    const blacklistFlags = flags ? `?blacklistFlags=${flags.join(',')}` : '';\r\n    console.log(blacklistFlags);\r\n    const response = await axios\r\n      .get(`/joke/${category}${blacklistFlags}`)\r\n      .then((res) => res.data);\r\n    const joke: Joke = response;\r\n    return joke;\r\n  };\r\n  return { getFlags, getCategories, getJoke };\r\n};\r\n","import Axios, { AxiosInstance } from 'axios';\r\n\r\nconst baseUrl = 'https://v2.jokeapi.dev/';\r\n\r\nexport const getAxiosInstance = (): AxiosInstance => {\r\n  let axiosInstance = Axios.create({ baseURL: baseUrl });\r\n  axiosInstance.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      const { status } = error.response;\r\n      if (status > 399) console.info(`API error (status ${status})`);\r\n    }\r\n  );\r\n  return axiosInstance;\r\n};\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nconst mainColor = '#383794';\r\n\r\nexport const checkBoxTheme = createMuiTheme({\r\n  palette: {\r\n    secondary: {\r\n      main: mainColor,\r\n    },\r\n  },\r\n});\r\n\r\nexport const radioButtonTheme = createMuiTheme({\r\n  palette: {\r\n    secondary: {\r\n      main: mainColor,\r\n    },\r\n  },\r\n});\r\n","import {\r\n  Checkbox,\r\n  CircularProgress,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormLabel,\r\n  Grid,\r\n  Radio,\r\n  RadioGroup,\r\n  ThemeProvider,\r\n} from '@material-ui/core';\r\nimport { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useCategories } from '../categories/useCategories';\r\nimport { useFlags } from '../flags/useFlags';\r\nimport { checkBoxTheme, radioButtonTheme } from './dialogTheme';\r\nimport './dialog.css';\r\n\r\ninterface DialogValuesProps {\r\n  getDialogValues: Function;\r\n}\r\n\r\nexport const DialogValues = ({ getDialogValues }: DialogValuesProps) => {\r\n  const category = useCategories();\r\n  const flags = useFlags();\r\n  const [radioValue, setRadioValue] = useState('Any');\r\n  const [checkValues, setCheckValues] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    getDialogValues(radioValue, checkValues);\r\n  }, [checkValues, radioValue]);\r\n\r\n  if (!category || !flags)\r\n    return (\r\n      <Grid container justify={'center'}>\r\n        <CircularProgress />\r\n      </Grid>\r\n    );\r\n\r\n  const handleChangeRadio = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setRadioValue(event.target.value);\r\n  };\r\n\r\n  const handleChangeCheck = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { checked, name } = event.target;\r\n    if (checked) {\r\n      setCheckValues([...checkValues, name]);\r\n    } else {\r\n      const index = checkValues.indexOf(name);\r\n      let check = checkValues;\r\n      for (let i = 0; i < check.length; i++) {\r\n        if (i === index) {\r\n          check.splice(i, 1);\r\n        }\r\n      }\r\n      setCheckValues([...check]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <Grid container direction=\"row\" justify=\"space-around\">\r\n        <RadioGroup\r\n          aria-label=\"category\"\r\n          name=\"category\"\r\n          value={radioValue}\r\n          onChange={handleChangeRadio}\r\n        >\r\n          <FormLabel component=\"legend\" focused={false}>\r\n            Category\r\n          </FormLabel>\r\n          <ThemeProvider theme={radioButtonTheme}>\r\n            {Object.entries(category).map((res) => {\r\n              return (\r\n                <FormControlLabel\r\n                  key={res[1]}\r\n                  value={res[1]}\r\n                  control={<Radio />}\r\n                  label={res[1]}\r\n                  checked={res[1] === radioValue ? true : false}\r\n                />\r\n              );\r\n            })}\r\n          </ThemeProvider>\r\n        </RadioGroup>\r\n\r\n        <FormGroup>\r\n          <FormLabel component=\"label\" focused={false}>\r\n            Flags\r\n          </FormLabel>\r\n          <ThemeProvider theme={checkBoxTheme}>\r\n            {Object.entries(flags).map((res) => (\r\n              <FormControlLabel\r\n                key={res[1]}\r\n                control={\r\n                  <Checkbox\r\n                    checked={checkValues.includes(res[1])}\r\n                    onChange={handleChangeCheck}\r\n                    name={res[1]}\r\n                  />\r\n                }\r\n                label={res[1]}\r\n              />\r\n            ))}\r\n          </ThemeProvider>\r\n        </FormGroup>\r\n      </Grid>\r\n    </FormControl>\r\n  );\r\n};\r\n","import { useMemo, useState } from 'react';\r\nimport { genericController } from '../../api/generic-api';\r\nimport { Categories } from '../../api/schemas/categories';\r\n\r\nexport const useCategories = (): Categories | undefined => {\r\n  const [categories, setCategories] = useState<Categories>();\r\n\r\n  const categ = useMemo(async () => {\r\n    const c = await genericController().getCategories();\r\n    setCategories(c);\r\n  }, []);\r\n  return categories;\r\n};\r\n","import { useMemo, useState } from 'react';\r\nimport { genericController } from '../../api/generic-api';\r\nimport { Flags } from '../../api/schemas/flags';\r\n\r\nexport const useFlags = (): Flags | undefined => {\r\n  const [flags, setFlags] = useState<Flags>();\r\n\r\n  const allFlags = useMemo(async () => {\r\n    const f = await genericController().getFlags();\r\n    setFlags(f);\r\n  }, []);\r\n\r\n  return flags;\r\n};\r\n","import {\r\n  Button,\r\n  createMuiTheme,\r\n  Dialog,\r\n  DialogTitle,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport { DialogValues } from './dialogContent';\r\nimport './dialog.css';\r\nimport { useState } from 'react';\r\n\r\ninterface DialogComponentProps {\r\n  open: boolean;\r\n  setOpen: Function;\r\n  getDialogValues: Function;\r\n}\r\n\r\nexport const DialogComponent = ({\r\n  open,\r\n  setOpen,\r\n  getDialogValues,\r\n}: DialogComponentProps) => {\r\n  const dialogCancel = () => {\r\n    setOpen(false);\r\n  };\r\n  let valuesFilter = { radio: 'any', check: [''] };\r\n  const getValues = (radio: string, check: string[]) => {\r\n    valuesFilter.radio = radio;\r\n    valuesFilter.check = check;\r\n  };\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n      fullWidth={true}\r\n      onBackdropClick={() => dialogCancel()}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">Filter</DialogTitle>\r\n      <DialogValues getDialogValues={getValues} />\r\n      <Grid container direction=\"row\" justify=\"space-evenly\">\r\n        <Button\r\n          size=\"small\"\r\n          variant={'contained'}\r\n          id={'btnDialogCancel'}\r\n          onClick={() => {\r\n            dialogCancel();\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          variant={'contained'}\r\n          id={'btnDialogFilter'}\r\n          onClick={() => {\r\n            // console.log(valuesFilter);\r\n            getDialogValues(valuesFilter);\r\n            dialogCancel();\r\n          }}\r\n        >\r\n          Filter\r\n        </Button>\r\n      </Grid>\r\n    </Dialog>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport './card.css';\r\nimport { JokeComponent } from './joke';\r\nimport { DialogComponent } from '../dialog/dialog';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { genericController } from '../../api/generic-api';\r\nimport { Joke } from '../../api/schemas/joke';\r\n\r\ninterface DialogValuesProps {\r\n  radio: string;\r\n  check: string[];\r\n}\r\n\r\nexport const CardComponent = () => {\r\n  const [open, setOpen] = useState(true);\r\n  const [joke, setJoke] = useState<Joke>();\r\n  const [category, setCategory] = useState<string>('any');\r\n  const [flags, setFlags] = useState<string[] | null>(null);\r\n\r\n  const getJoke = () => {\r\n    const j = async () => {\r\n      const newJoke = await genericController().getJoke(category, flags);\r\n      setJoke(newJoke);\r\n    };\r\n    j();\r\n  };\r\n  useEffect(() => {\r\n    const j = async () => getJoke();\r\n    j();\r\n  }, []);\r\n\r\n  if (!joke) return <CircularProgress />;\r\n  const getDialogValues = ({ radio, check }: DialogValuesProps) => {\r\n    setCategory(radio);\r\n    setFlags(check);\r\n    getJoke();\r\n  };\r\n  return (\r\n    <>\r\n      <Card id={'card'}>\r\n        <CardContent>\r\n          <JokeComponent joke={joke} />\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            variant={'contained'}\r\n            id={'btnNewJoke'}\r\n            onClick={(event: React.MouseEvent<HTMLElement>) => {\r\n              setJoke(undefined);\r\n              getJoke();\r\n            }}\r\n          >\r\n            Tell Me More\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      <Button\r\n        size=\"small\"\r\n        variant={'contained'}\r\n        id={'btnFilter'}\r\n        onClick={() => {\r\n          setOpen(true);\r\n        }}\r\n      >\r\n        Filter\r\n      </Button>\r\n      <DialogComponent\r\n        open={open}\r\n        setOpen={setOpen}\r\n        getDialogValues={getDialogValues}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { Typography } from '@material-ui/core';\r\n\r\nexport const Footer = () => {\r\n  const currentYear = new Date().getFullYear();\r\n  const developmentYear = 2021;\r\n  const yearShown =\r\n    currentYear === developmentYear\r\n      ? developmentYear\r\n      : `${developmentYear} - ${currentYear}`;\r\n  return (\r\n    <footer>\r\n      <Typography variant={'overline'}>\r\n        Developed by Matheus Garrido &copy; {yearShown}\r\n      </Typography>\r\n    </footer>\r\n  );\r\n};\r\n","import { Header } from './components/common/header';\nimport { CardComponent } from './components/joke/card';\nimport { Footer } from './components/common/footer';\nimport './styles/reset.css';\nimport './components/common/common.css';\nimport { Grid } from '@material-ui/core';\n\nfunction App() {\n  const title = 'GetClown';\n  return (\n    <>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n        id=\"mainGrid\"\n      >\n        <Header title={title} />\n        <main>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <CardComponent />\n          </Grid>\n        </main>\n        <Footer />\n      </Grid>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementsByTagName('body')[0]\n);\n"],"sourceRoot":""}